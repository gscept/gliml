#pragma once
//------------------------------------------------------------------------------
/**
    gliml_dds.h
    DDS specific code of gliml, derived from nvdds.cpp:
    https://github.com/tlorach/nvFX/blob/master/samples/shared/nv_dds/nv_dds.cpp
*/

#pragma pack(push, 1)
struct dds_pixelformat {
    unsigned int dwSize;
    unsigned int dwFlags;
    unsigned int dwFourCC;
    unsigned int dwRGBBitCount;
    unsigned int dwRBitMask;
    unsigned int dwGBitMask;
    unsigned int dwBBitMask;
    unsigned int dwABitMask;
};
    
struct dds_header {
    unsigned int dwMagicFourCC;
    unsigned int dwSize;
    unsigned int dwFlags;
    unsigned int dwHeight;
    unsigned int dwWidth;
    unsigned int dwPitchOrLinearSize;
    unsigned int dwDepth;
    unsigned int dwMipMapCount;
    unsigned int dwReserved[11];
    dds_pixelformat ddspf;
    unsigned int dwCaps1;
    unsigned int dwCaps2;
    unsigned int dwReserved2[3];
};


struct dds_header_dxt10
{
    uint32_t        dwDxgiFormat;
    uint32_t        dwResourceDimension;
    uint32_t        dwMiscFlag; // see D3D11_RESOURCE_MISC_FLAG
    uint32_t        dwArraySize;
    uint32_t        dwMiscFlags2; // see DDS_MISC_FLAGS2
};
#pragma pack(pop)

// surface description flags
#define GLIML_DDSF_CAPS 0x00000001
#define GLIML_DDSF_HEIGHT 0x00000002
#define GLIML_DDSF_WIDTH 0x00000004
#define GLIML_DDSF_PITCH 0x00000008
#define GLIML_DDSF_PIXELFORMAT 0x00001000
#define GLIML_DDSF_MIPMAPCOUNT 0x00020000
#define GLIML_DDSF_LINEARSIZE 0x00080000
#define GLIML_DDSF_DEPTH 0x00800000
    
// pixel format flags
#define GLIML_DDSF_ALPHAPIXELS 0x00000001
#define GLIML_DDSF_FOURCC 0x00000004
#define GLIML_DDSF_RGB 0x00000040
#define GLIML_DDSF_RGBA 0x00000041
    
// dwCaps1 flags
#define GLIML_DDSF_COMPLEX 0x00000008
#define GLIML_DDSF_TEXTURE 0x00001000
#define GLIML_DDSF_MIPMAP 0x00400000
    
// dwCaps2 flags
#define GLIML_DDSF_CUBEMAP 0x00000200
#define GLIML_DDSF_CUBEMAP_POSITIVEX 0x00000400
#define GLIML_DDSF_CUBEMAP_NEGATIVEX 0x00000800
#define GLIML_DDSF_CUBEMAP_POSITIVEY 0x00001000
#define GLIML_DDSF_CUBEMAP_NEGATIVEY 0x00002000
#define GLIML_DDSF_CUBEMAP_POSITIVEZ 0x00004000
#define GLIML_DDSF_CUBEMAP_NEGATIVEZ 0x00008000
#define GLIML_DDSF_CUBEMAP_ALL_FACES 0x0000FC00
#define GLIML_DDSF_VOLUME 0x00200000
    
// compressed texture types
#define GLIML_FOURCC_DXT1 '1TXD'        //0x31545844
#define GLIML_FOURCC_DXT2 '2TXD'
#define GLIML_FOURCC_DXT3 '3TXD'        //0x33545844
#define GLIML_FOURCC_DXT4 '4TXD'
#define GLIML_FOURCC_DXT5 '5TXD'        //0x35545844 

#define GLIML_FOURCC_ATI1 '1ITA'
#define GLIML_FOURCC_ATI2 '2ITA'
#define GLIML_FOURCC_BC4U 'U4CB'
#define GLIML_FOURCC_BC4S 'S4CB'
#define GLIML_FOURCC_BC5S 'S5CB'
#define GLIML_FOURCC_BC7U 0x8E8C

#define GLIML_FOURCC_R8G8_B8G8 'GBGR'
#define GLIML_FOURCC_G8R8_G8B8 'BGRG'

#define GLIML_FOURCC_R16G16B16A16_UNORM 36
#define GLIML_FOURCC_R16G16B16A16_SNORM 110
#define GLIML_FOURCC_R16_FLOAT 111
#define GLIML_FOURCC_R16G16 112
#define GLIML_FOURCC_R16G16B16A16 113
#define GLIML_FOURCC_R32_FLOAT 114
#define GLIML_FOURCC_R32G32_FLOAT 115
#define GLIML_FOURCC_R32G32B32A32_FLOAT 116


#define GLIML_FOURCC_DXT5_xGxR 0x52784778

#define GLIML_FOURCC_DXT10 '01XD'       //0x30315844

#ifndef DXGI_FORMAT_DEFINED
#define DXGI_FORMAT_DEFINED 1

enum DXGI_FORMAT {
    DXGI_FORMAT_UNKNOWN,
    DXGI_FORMAT_R32G32B32A32_TYPELESS,
    DXGI_FORMAT_R32G32B32A32_FLOAT,
    DXGI_FORMAT_R32G32B32A32_UINT,
    DXGI_FORMAT_R32G32B32A32_SINT,
    DXGI_FORMAT_R32G32B32_TYPELESS,
    DXGI_FORMAT_R32G32B32_FLOAT,
    DXGI_FORMAT_R32G32B32_UINT,
    DXGI_FORMAT_R32G32B32_SINT,
    DXGI_FORMAT_R16G16B16A16_TYPELESS,
    DXGI_FORMAT_R16G16B16A16_FLOAT,
    DXGI_FORMAT_R16G16B16A16_UNORM,
    DXGI_FORMAT_R16G16B16A16_UINT,
    DXGI_FORMAT_R16G16B16A16_SNORM,
    DXGI_FORMAT_R16G16B16A16_SINT,
    DXGI_FORMAT_R32G32_TYPELESS,
    DXGI_FORMAT_R32G32_FLOAT,
    DXGI_FORMAT_R32G32_UINT,
    DXGI_FORMAT_R32G32_SINT,
    DXGI_FORMAT_R32G8X24_TYPELESS,
    DXGI_FORMAT_D32_FLOAT_S8X24_UINT,
    DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS,
    DXGI_FORMAT_X32_TYPELESS_G8X24_UINT,
    DXGI_FORMAT_R10G10B10A2_TYPELESS,
    DXGI_FORMAT_R10G10B10A2_UNORM,
    DXGI_FORMAT_R10G10B10A2_UINT,
    DXGI_FORMAT_R11G11B10_FLOAT,
    DXGI_FORMAT_R8G8B8A8_TYPELESS,
    DXGI_FORMAT_R8G8B8A8_UNORM,
    DXGI_FORMAT_R8G8B8A8_UNORM_SRGB,
    DXGI_FORMAT_R8G8B8A8_UINT,
    DXGI_FORMAT_R8G8B8A8_SNORM,
    DXGI_FORMAT_R8G8B8A8_SINT,
    DXGI_FORMAT_R16G16_TYPELESS,
    DXGI_FORMAT_R16G16_FLOAT,
    DXGI_FORMAT_R16G16_UNORM,
    DXGI_FORMAT_R16G16_UINT,
    DXGI_FORMAT_R16G16_SNORM,
    DXGI_FORMAT_R16G16_SINT,
    DXGI_FORMAT_R32_TYPELESS,
    DXGI_FORMAT_D32_FLOAT,
    DXGI_FORMAT_R32_FLOAT,
    DXGI_FORMAT_R32_UINT,
    DXGI_FORMAT_R32_SINT,
    DXGI_FORMAT_R24G8_TYPELESS,
    DXGI_FORMAT_D24_UNORM_S8_UINT,
    DXGI_FORMAT_R24_UNORM_X8_TYPELESS,
    DXGI_FORMAT_X24_TYPELESS_G8_UINT,
    DXGI_FORMAT_R8G8_TYPELESS,
    DXGI_FORMAT_R8G8_UNORM,
    DXGI_FORMAT_R8G8_UINT,
    DXGI_FORMAT_R8G8_SNORM,
    DXGI_FORMAT_R8G8_SINT,
    DXGI_FORMAT_R16_TYPELESS,
    DXGI_FORMAT_R16_FLOAT,
    DXGI_FORMAT_D16_UNORM,
    DXGI_FORMAT_R16_UNORM,
    DXGI_FORMAT_R16_UINT,
    DXGI_FORMAT_R16_SNORM,
    DXGI_FORMAT_R16_SINT,
    DXGI_FORMAT_R8_TYPELESS,
    DXGI_FORMAT_R8_UNORM,
    DXGI_FORMAT_R8_UINT,
    DXGI_FORMAT_R8_SNORM,
    DXGI_FORMAT_R8_SINT,
    DXGI_FORMAT_A8_UNORM,
    DXGI_FORMAT_R1_UNORM,
    DXGI_FORMAT_R9G9B9E5_SHAREDEXP,
    DXGI_FORMAT_R8G8_B8G8_UNORM,
    DXGI_FORMAT_G8R8_G8B8_UNORM,
    DXGI_FORMAT_BC1_TYPELESS,
    DXGI_FORMAT_BC1_UNORM,
    DXGI_FORMAT_BC1_UNORM_SRGB,
    DXGI_FORMAT_BC2_TYPELESS,
    DXGI_FORMAT_BC2_UNORM,
    DXGI_FORMAT_BC2_UNORM_SRGB,
    DXGI_FORMAT_BC3_TYPELESS,
    DXGI_FORMAT_BC3_UNORM,
    DXGI_FORMAT_BC3_UNORM_SRGB,
    DXGI_FORMAT_BC4_TYPELESS,
    DXGI_FORMAT_BC4_UNORM,
    DXGI_FORMAT_BC4_SNORM,
    DXGI_FORMAT_BC5_TYPELESS,
    DXGI_FORMAT_BC5_UNORM,
    DXGI_FORMAT_BC5_SNORM,
    DXGI_FORMAT_B5G6R5_UNORM,
    DXGI_FORMAT_B5G5R5A1_UNORM,
    DXGI_FORMAT_B8G8R8A8_UNORM,
    DXGI_FORMAT_B8G8R8X8_UNORM,
    DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM,
    DXGI_FORMAT_B8G8R8A8_TYPELESS,
    DXGI_FORMAT_B8G8R8A8_UNORM_SRGB,
    DXGI_FORMAT_B8G8R8X8_TYPELESS,
    DXGI_FORMAT_B8G8R8X8_UNORM_SRGB,
    DXGI_FORMAT_BC6H_TYPELESS,
    DXGI_FORMAT_BC6H_UF16,
    DXGI_FORMAT_BC6H_SF16,
    DXGI_FORMAT_BC7_TYPELESS,
    DXGI_FORMAT_BC7_UNORM,
    DXGI_FORMAT_BC7_UNORM_SRGB,
    DXGI_FORMAT_AYUV,
    DXGI_FORMAT_Y410,
    DXGI_FORMAT_Y416,
    DXGI_FORMAT_NV12,
    DXGI_FORMAT_P010,
    DXGI_FORMAT_P016,
    DXGI_FORMAT_420_OPAQUE,
    DXGI_FORMAT_YUY2,
    DXGI_FORMAT_Y210,
    DXGI_FORMAT_Y216,
    DXGI_FORMAT_NV11,
    DXGI_FORMAT_AI44,
    DXGI_FORMAT_IA44,
    DXGI_FORMAT_P8,
    DXGI_FORMAT_A8P8,
    DXGI_FORMAT_B4G4R4A4_UNORM,
    DXGI_FORMAT_P208,
    DXGI_FORMAT_V208,
    DXGI_FORMAT_V408,
    DXGI_FORMAT_SAMPLER_FEEDBACK_MIN_MIP_OPAQUE,
    DXGI_FORMAT_SAMPLER_FEEDBACK_MIP_REGION_USED_OPAQUE,
    DXGI_FORMAT_FORCE_UINT
};

#endif


#include "gliml_dds.inl"

